{"version":3,"sources":["main.js"],"names":["CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","authorizeButton","document","getElementById","signoutButton","handleClientLoad","gapi","load","initClient","client","init","apiKey","clientId","discoveryDocs","scope","then","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","get","onclick","handleAuthClick","handleSignoutClick","error","appendPre","JSON","stringify","style","display","listFiles","event","signIn","signOut","message","pre","textContent","createTextNode","appendChild","drive","files","list","pageSize","fields","response","result","length","i","file","name","id","window"],"mappings":";AACA,IAAIA,EACA,2EACAC,EAAU,0CAGVC,EAAiB,CACjB,8DAKAC,EAAS,0DAETC,EAAkBC,SAASC,eAAe,oBAC1CC,EAAgBF,SAASC,eAAe,kBAK5C,SAASE,IACLC,KAAKC,KAAK,eAAgBC,GAO9B,SAASA,IACLF,KAAKG,OACAC,KAAK,CACFC,OAAQb,EACRc,SAAUf,EACVgB,cAAed,EACfe,MAAOd,IAEVe,KACG,WAEIT,KAAKU,MACAC,kBACAC,WAAWC,OAAOC,GAGvBA,EACId,KAAKU,MAAMC,kBAAkBC,WAAWG,OAE5CpB,EAAgBqB,QAAUC,EAC1BnB,EAAckB,QAAUE,GAE5B,SAASC,GACLC,EAAUC,KAAKC,UAAUH,EAAO,KAAM,MAStD,SAASL,EAAmBF,GACpBA,GACAjB,EAAgB4B,MAAMC,QAAU,OAChC1B,EAAcyB,MAAMC,QAAU,QAC9BC,MAEA9B,EAAgB4B,MAAMC,QAAU,QAChC1B,EAAcyB,MAAMC,QAAU,QAOtC,SAASP,EAAgBS,GACrB1B,KAAKU,MAAMC,kBAAkBgB,SAMjC,SAAST,EAAmBQ,GACxB1B,KAAKU,MAAMC,kBAAkBiB,UASjC,SAASR,EAAUS,GACXC,IAAAA,EAAMlC,SAASC,eAAe,WAC9BkC,EAAcnC,SAASoC,eAAeH,EAAU,MACpDC,EAAIG,YAAYF,GAMpB,SAASN,IACLzB,KAAKG,OAAO+B,MAAMC,MACbC,KAAK,CACFC,SAAU,GACVC,OAAQ,mCAEX7B,KAAK,SAAS8B,GACXnB,EAAU,UACNe,IAAAA,EAAQI,EAASC,OAAOL,MACxBA,GAAAA,GAASA,EAAMM,OAAS,EACnB,IAAA,IAAIC,EAAI,EAAGA,EAAIP,EAAMM,OAAQC,IAAK,CAC/BC,IAAAA,EAAOR,EAAMO,GACjBtB,EAAUuB,EAAKC,KAAO,KAAOD,EAAKE,GAAK,UAG3CzB,EAAU,qBAK1B0B,OAAO/C,iBAAmBA","file":"main.b52dc656.js","sourceRoot":"..\\src","sourcesContent":["// Client ID and API key from the Developer Console\r\nvar CLIENT_ID =\r\n    '404368161278-r3fe3d25hsifgnrjmnhspt9kln1589sc.apps.googleusercontent.com'\r\nvar API_KEY = 'AIzaSyAtW45PibDKV137Zjhf0hqG6Ulm34FFiKs'\r\n\r\n// Array of API discovery doc URLs for APIs used by the quickstart\r\nvar DISCOVERY_DOCS = [\r\n    'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest',\r\n]\r\n\r\n// Authorization scopes required by the API; multiple scopes can be\r\n// included, separated by spaces.\r\nvar SCOPES = 'https://www.googleapis.com/auth/drive.metadata.readonly'\r\n\r\nvar authorizeButton = document.getElementById('authorize_button')\r\nvar signoutButton = document.getElementById('signout_button')\r\n\r\n/**\r\n *  On load, called to load the auth2 library and API client library.\r\n */\r\nfunction handleClientLoad() {\r\n    gapi.load('client:auth2', initClient)\r\n}\r\n\r\n/**\r\n *  Initializes the API client library and sets up sign-in state\r\n *  listeners.\r\n */\r\nfunction initClient() {\r\n    gapi.client\r\n        .init({\r\n            apiKey: API_KEY,\r\n            clientId: CLIENT_ID,\r\n            discoveryDocs: DISCOVERY_DOCS,\r\n            scope: SCOPES,\r\n        })\r\n        .then(\r\n            function() {\r\n                // Listen for sign-in state changes.\r\n                gapi.auth2\r\n                    .getAuthInstance()\r\n                    .isSignedIn.listen(updateSigninStatus)\r\n\r\n                // Handle the initial sign-in state.\r\n                updateSigninStatus(\r\n                    gapi.auth2.getAuthInstance().isSignedIn.get()\r\n                )\r\n                authorizeButton.onclick = handleAuthClick\r\n                signoutButton.onclick = handleSignoutClick\r\n            },\r\n            function(error) {\r\n                appendPre(JSON.stringify(error, null, 2))\r\n            }\r\n        )\r\n}\r\n\r\n/**\r\n *  Called when the signed in status changes, to update the UI\r\n *  appropriately. After a sign-in, the API is called.\r\n */\r\nfunction updateSigninStatus(isSignedIn) {\r\n    if (isSignedIn) {\r\n        authorizeButton.style.display = 'none'\r\n        signoutButton.style.display = 'block'\r\n        listFiles()\r\n    } else {\r\n        authorizeButton.style.display = 'block'\r\n        signoutButton.style.display = 'none'\r\n    }\r\n}\r\n\r\n/**\r\n *  Sign in the user upon button click.\r\n */\r\nfunction handleAuthClick(event) {\r\n    gapi.auth2.getAuthInstance().signIn()\r\n}\r\n\r\n/**\r\n *  Sign out the user upon button click.\r\n */\r\nfunction handleSignoutClick(event) {\r\n    gapi.auth2.getAuthInstance().signOut()\r\n}\r\n\r\n/**\r\n * Append a pre element to the body containing the given message\r\n * as its text node. Used to display the results of the API call.\r\n *\r\n * @param {string} message Text to be placed in pre element.\r\n */\r\nfunction appendPre(message) {\r\n    var pre = document.getElementById('content')\r\n    var textContent = document.createTextNode(message + '\\n')\r\n    pre.appendChild(textContent)\r\n}\r\n\r\n/**\r\n * Print files.\r\n */\r\nfunction listFiles() {\r\n    gapi.client.drive.files\r\n        .list({\r\n            pageSize: 10,\r\n            fields: 'nextPageToken, files(id, name)',\r\n        })\r\n        .then(function(response) {\r\n            appendPre('Files:')\r\n            var files = response.result.files\r\n            if (files && files.length > 0) {\r\n                for (var i = 0; i < files.length; i++) {\r\n                    var file = files[i]\r\n                    appendPre(file.name + ' (' + file.id + ')')\r\n                }\r\n            } else {\r\n                appendPre('No files found.')\r\n            }\r\n        })\r\n}\r\n\r\nwindow.handleClientLoad = handleClientLoad\r\n"]}